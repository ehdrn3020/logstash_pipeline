input {
  file {
    path => [
      "/home/ec2-user/logs/A/${LOG_DATE}.dat",
      "/home/ec2-user/logs/B/${LOG_DATE}.dat",
      "/home/ec2-user/logs/C/${LOG_DATE}.dat"
    ]
    start_position => "end"      # 파일의 처음부터 읽기 시작
    sincedb_path => "/home/ec2-user/packages/logstash-sincedb"  # 마지막 offset 저장 파일
    codec => plain                    # 파일 내용은 텍스트로 처리
  }
}

filter {
  # 로그 데이터 가공
  grok {
    match => { "message" => "%{WORD:item_id},%{TIMESTAMP_ISO8601:created_at}" }
  }
  date {
    match => [ "created_at", "ISO8601" ]
    target => "@timestamp"
  }
  mutate {
    remove_field => [ "message", "host", "path", "@version" ]  # 불필요한 필드 제거
  }
}

output {
  jdbc {
    driver_class => "com.mysql.cj.jdbc.Driver"
    connection_string => "jdbc:mysql://localhost:3306/data?user=dgk&password=1234"
    statement => [
      "INSERT INTO collector (item_id, created_at) VALUES (?, ?)",
      "item_id", "created_at"
    ]
    driver_jar_path => "/home/ec2-user/packages/logstash-8.16.0/vendor/jar/mysql-connector-j-8.0.33.jar"
  }
}